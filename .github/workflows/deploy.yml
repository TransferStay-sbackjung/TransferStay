name: CI/CD Pipeline

on:
  push:
    branches:
      - develop  # todo : main 변경

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle 패키지 캐싱
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: gradlew 파일 실행 권한 부여
        run: chmod +x ./gradlew

      - name: Gradle 빌드
        run: ./gradlew build -x test  # 테스트 제외하고 빌드

      # JAR 파일을 EC2로 복사
      - name: JAR 파일 서버전송
        uses: appleboy/scp-action@v0.1.0  # scp : security copy protocol
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: build/libs/TransferStay-0.0.1-SNAPSHOT.jar
          target: /home/ubuntu

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: 이전 JAR 프로세스 종료
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            set -x
            JAR_PATH=/home/ubuntu/build/libs/TransferStay-0.0.1-SNAPSHOT.jar

            if pgrep -f "$JAR_PATH"; then
              echo "이전 프로세스가 실행 중입니다. 종료합니다."
              pkill -f "$JAR_PATH"
            else
              echo "실행 중인 이전 프로세스가 없습니다."
            fi

            if pgrep -f "$JAR_PATH"; then
              echo "프로세스가 아직 종료되지 않았습니다. 강제 종료합니다."
              pkill -9 -f "$JAR_PATH"
            sleep 10  # 10초 대기
            else
              echo "이전 프로세스 종료가 완료되었습니다."
            fi

      - name: 새로운 JAR 파일 실행
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo "현재 작업 디렉토리 확인: $(pwd)"
            
            JAR_PATH=/home/ubuntu/build/libs/TransferStay-0.0.1-SNAPSHOT.jar
            LOG_FILE=/home/ubuntu/app.log  
            
            echo "새로운 애플리케이션 시작 중..."
            
           
            if [ -f "$JAR_PATH" ]; then
            echo "JAR 파일을 찾았습니다. 애플리케이션을 시작합니다."
            
            # nohup을 통해 백그라운드에서 실행하고 로그를 절대 경로에 저장
            nohup java -jar "$JAR_PATH" > "$LOG_FILE" 2>&1 &
            
            echo "애플리케이션이 백그라운드에서 실행 중입니다."
            else
            echo "JAR 파일을 찾을 수 없습니다!"
            exit 1
            fi
